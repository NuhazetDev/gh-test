{"mappings":"AECe,MAAA,EAEX,YAAY,CAAI,CAAE,CACd,IAAI,CAAC,IAAI,CAAG,EAAK,IAAI,CACrB,IAAI,CAAC,EAAE,CAAG,EAAK,EAAE,CACjB,IAAI,CAAC,SAAS,CAAG,EAAK,OAAO,CAAC,aAAa,CAC3C,IAAI,CAAC,QAAQ,CAAG,EAAK,OAAO,CAAC,YAAY,CACzC,IAAI,CAAC,QAAQ,CAAG,EAAK,KAAK,AAC9B,CACJ,CDNA,IAAI,EAAW,EAAE,CAMjB,AAHe,SAAS,aAAa,CAAC,UAG/B,gBAAgB,CAAC,QAAS,KAE7B,SAAS,aAAa,CAAC,WAAW,KAAK,CAAC,UAAU,CAAG,SAErD,SAAS,aAAa,CAAC,YAAY,KAAK,CAAC,UAAU,CAAG,UAEtD,GACJ,GAGA,MAAM,EAAe,UAEjB,IAAI,IAAI,EAAI,EAAG,GAAK,IAAK,IAGrB,MAAM,MAAM,qCAAuC,EAAI,KAClD,IAAI,CAAC,SAAS,CAAM,EACjB,OAAO,EAAO,IAAI,EAEtB,GAAG,IAAI,CAAC,SAAS,CAAM,MAcd,EAAA,EAZW,IAAI,EADP,GAczB,EAAS,IAAI,CAAC,EARN,EAGR,OAAM,GACV,EAQM,EAAc,UAEhB,IAAM,EAAU,SAAS,cAAc,CAAC,WAExC,IAAI,IAAI,EAAI,EAAG,EAAI,EAAS,MAAM,CAAE,IAAK,CAErC,IADA,IAAI,EAAO,EACJ,GAAO,CAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,CACvC,GAAI,AAAO,GAAP,EACA,IAAI,EAAQ,CAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAI,CAAC,IAAI,CAAC,IAAI,CACnD,GAAI,AAAO,GAAP,EACA,IAAI,EAAQ,CAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAI,CAAC,IAAI,CAAC,IAAI,MAE/C,EAAQ,EACZ,CAAA,GACJ,CAGA,EAAQ,SAAS,EAAO,CAAC;AACa,8CAAA,EAAE,CAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC;AACT,4DAAA,EAAE,CAAQ,CAAC,EAAE,CAAC,SAAS,CAAC;AAChD,oCAAA,EAAE,CAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;A;AAElC,wCAAA,EAAE,EAAM,CAAC,EAAE;A;AAEb,sCAAA,CAAC,AACnC,CACJ","sources":["<anon>","src/js/index.js","src/js/Pokemon.js"],"sourcesContent":["// Importamos la clase Pokemon desde el archivo Pokemon.js\n// Exportamos por defecto la clase Pokemon\nclass $32ecc6300349385a$export$2e2bcd8739ae039 {\n    // Constructor que recibe como parámetro data que contiene los datos de los Pokemon que obtenemos desde la API\n    constructor(data){\n        this.name = data.name; // Nombre del pokemon\n        this.id = data.id; // Id del pokemon\n        this.pkm_front = data.sprites.front_default; // Pokemon de frente\n        this.pkm_back = data.sprites.back_default; // Pokemon de espaldas\n        this.pkm_type = data.types; // Tipo del pokemon (Devuelve un array)\n    }\n}\n\n\n// Creamos un array para los 151 pokemons que obtendremos desde la API\nvar $8f6a480bb40b134f$var$pokemons = [];\n// Seleccionamos el elemento button del DOM usando querySelector \nconst $8f6a480bb40b134f$var$button = document.querySelector(\"button\");\n// Agregamos un event listener al botón para que se mantenga a la espera de hacer click en él\n// Cuando se recibe el click, se ejecuta la función flecha\n$8f6a480bb40b134f$var$button.addEventListener(\"click\", ()=>{\n    // Al hacer click sobre el botón, cambiamos su visibilidad y lo ocultamos\n    document.querySelector('#button').style.visibility = 'hidden';\n    // También cambiamos la visibilidad del elemento #pokedex, y lo mostramos en pantalla\n    document.querySelector('#pokedex').style.visibility = 'visible';\n    // LLamada a la función startPokedex() que comenzará el proceso de mostrar los Pokemon\n    $8f6a480bb40b134f$var$startPokedex();\n});\n// Función asíncrona que va a realizar operaciones con promesas para realizar la llamada a la API\nconst $8f6a480bb40b134f$var$startPokedex = async ()=>{\n    // Bucle for que itera desde 1 hasta 151, que son los primeros 151 Pokemon\n    for(var i = 1; i <= 151; i++)// Utilizamos fetch para hacer una solicitud a la API donde i representa el número de Pokemon\n    await fetch(\"https://pokeapi.co/api/v2/pokemon/\" + i + \"/\").then(function(result) {\n        return result.json();\n    // Convertimos la respuesta de la API en un objeto JSON\n    }).then(function(result) {\n        const data = result;\n        const pokemon = new (0, $32ecc6300349385a$export$2e2bcd8739ae039)(data);\n        $8f6a480bb40b134f$var$pushPokemon(pokemon);\n    //Guardamos el resultado en data y creamos una nueva instancia de Pokemon con los datos obtenidos\n    // almacenamos los resultados en el array\n    // console.log(pokemon);\n    });\n    // Una vez que todos los Pokemon se han añadido al array, llamamos a la función showPokedex\n    await $8f6a480bb40b134f$var$showPokedex();\n};\n// Esta función añade el Pokemon que se le pasa como parámetro al array\nfunction $8f6a480bb40b134f$var$pushPokemon(pokemon) {\n    $8f6a480bb40b134f$var$pokemons.push(pokemon);\n}\n// Esta función se encarga de mostrar en el DOM los Pokemon que se han obtenido y almacenado en el array \nconst $8f6a480bb40b134f$var$showPokedex = async ()=>{\n    // Se obtiene una referencia al elemento con el ID pokedex en el DOM donde se insertarán las tarjetas de los Pokemon.\n    const pokedex = document.getElementById(\"pokedex\");\n    // Iteramos sobre cada elemento del array pokemons\n    for(var i = 0; i < $8f6a480bb40b134f$var$pokemons.length; i++){\n        var aux = 0;\n        while(aux != $8f6a480bb40b134f$var$pokemons[i].pkm_type.length){\n            if (aux == 0) var tipo1 = $8f6a480bb40b134f$var$pokemons[i].pkm_type[aux].type.name;\n            if (aux == 1) var tipo2 = $8f6a480bb40b134f$var$pokemons[i].pkm_type[aux].type.name;\n            else tipo2 = \"\";\n            aux++;\n        }\n        // Para cada Pokemon, se crea una tarjeta con imágenes (vista frontal y trasera), el nombre y los tipos\n        // Esta estructura HTML se añade dinámicamente al contenedor pokedex\n        pokedex.innerHTML += `<div class=\"card\">\n                                    <img src=\"${$8f6a480bb40b134f$var$pokemons[i].pkm_back}\">\n                                    <img class=\"front\" src=\"${$8f6a480bb40b134f$var$pokemons[i].pkm_front}\"><br>\n                                    ${$8f6a480bb40b134f$var$pokemons[i].id}. ${$8f6a480bb40b134f$var$pokemons[i].name}<br>\n                                    <div class=\"types\">\n                                        ${tipo1} ${tipo2}\n                                    </div>\n                                </div>`;\n    }\n};\n\n\n//# sourceMappingURL=index.2902a4fd.js.map\n","// Importamos la clase Pokemon desde el archivo Pokemon.js\r\nimport Pokemon from './Pokemon.js';\r\n\r\n// Creamos un array para los 151 pokemons que obtendremos desde la API\r\nvar pokemons = [];\r\n\r\n// Seleccionamos el elemento button del DOM usando querySelector \r\nconst button = document.querySelector(\"button\");\r\n// Agregamos un event listener al botón para que se mantenga a la espera de hacer click en él\r\n// Cuando se recibe el click, se ejecuta la función flecha\r\nbutton.addEventListener(\"click\", () => {\r\n    // Al hacer click sobre el botón, cambiamos su visibilidad y lo ocultamos\r\n    document.querySelector('#button').style.visibility = 'hidden';\r\n    // También cambiamos la visibilidad del elemento #pokedex, y lo mostramos en pantalla\r\n    document.querySelector('#pokedex').style.visibility = 'visible';\r\n    // LLamada a la función startPokedex() que comenzará el proceso de mostrar los Pokemon\r\n    startPokedex();\r\n});\r\n\r\n// Función asíncrona que va a realizar operaciones con promesas para realizar la llamada a la API\r\nconst startPokedex = async () => {\r\n    // Bucle for que itera desde 1 hasta 151, que son los primeros 151 Pokemon\r\n    for(var i = 1; i <= 151; i++) {\r\n        \r\n        // Utilizamos fetch para hacer una solicitud a la API donde i representa el número de Pokemon\r\n        await fetch(\"https://pokeapi.co/api/v2/pokemon/\" + i + \"/\")\r\n            .then(function(result) {\r\n                return result.json();\r\n            // Convertimos la respuesta de la API en un objeto JSON\r\n            }).then(function(result) {\r\n                const data = result;\r\n                const pokemon = new Pokemon (data);\r\n                pushPokemon(pokemon);\r\n                //Guardamos el resultado en data y creamos una nueva instancia de Pokemon con los datos obtenidos\r\n                // almacenamos los resultados en el array\r\n               // console.log(pokemon);\r\n            });\r\n    }\r\n    // Una vez que todos los Pokemon se han añadido al array, llamamos a la función showPokedex\r\n    await showPokedex();\r\n};\r\n\r\n// Esta función añade el Pokemon que se le pasa como parámetro al array\r\nfunction pushPokemon(pokemon) {\r\n    pokemons.push(pokemon);\r\n}\r\n\r\n// Esta función se encarga de mostrar en el DOM los Pokemon que se han obtenido y almacenado en el array \r\nconst showPokedex = async () => {\r\n    // Se obtiene una referencia al elemento con el ID pokedex en el DOM donde se insertarán las tarjetas de los Pokemon.\r\n    const pokedex = document.getElementById(\"pokedex\");\r\n    // Iteramos sobre cada elemento del array pokemons\r\n    for(var i = 0; i < pokemons.length; i++) {\r\n        var aux =  0;\r\n        while (aux != pokemons[i].pkm_type.length) {\r\n            if (aux == 0)\r\n                var tipo1 = pokemons[i].pkm_type[aux].type.name;                       \r\n            if (aux == 1)   \r\n                var tipo2 = pokemons[i].pkm_type[aux].type.name;\r\n            else \r\n                tipo2 = \"\";          \r\n            aux++; \r\n        }\r\n        // Para cada Pokemon, se crea una tarjeta con imágenes (vista frontal y trasera), el nombre y los tipos\r\n        // Esta estructura HTML se añade dinámicamente al contenedor pokedex\r\n        pokedex.innerHTML +=    `<div class=\"card\">\r\n                                    <img src=\"${pokemons[i].pkm_back}\">\r\n                                    <img class=\"front\" src=\"${pokemons[i].pkm_front}\"><br>\r\n                                    ${pokemons[i].id}. ${pokemons[i].name}<br>\r\n                                    <div class=\"types\">\r\n                                        ${tipo1} ${tipo2}\r\n                                    </div>\r\n                                </div>`\r\n    }\r\n}\r\n","// Exportamos por defecto la clase Pokemon\r\nexport default class Pokemon {\r\n    // Constructor que recibe como parámetro data que contiene los datos de los Pokemon que obtenemos desde la API\r\n    constructor(data) {\r\n        this.name = data.name;                          // Nombre del pokemon\r\n        this.id = data.id;                              // Id del pokemon\r\n        this.pkm_front = data.sprites.front_default;    // Pokemon de frente\r\n        this.pkm_back = data.sprites.back_default;      // Pokemon de espaldas\r\n        this.pkm_type = data.types;                     // Tipo del pokemon (Devuelve un array)\r\n    }\r\n}"],"names":["$32ecc6300349385a$export$2e2bcd8739ae039","constructor","data","name","id","pkm_front","sprites","front_default","pkm_back","back_default","pkm_type","types","$8f6a480bb40b134f$var$pokemons","$8f6a480bb40b134f$var$button","document","querySelector","addEventListener","style","visibility","$8f6a480bb40b134f$var$startPokedex","i","fetch","then","result","json","pokemon","push","$8f6a480bb40b134f$var$showPokedex","pokedex","getElementById","length","aux","tipo1","type","tipo2","innerHTML"],"version":3,"file":"index.2902a4fd.js.map"}